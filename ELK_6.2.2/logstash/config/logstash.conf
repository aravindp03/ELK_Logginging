input {
  beats {
    port => 9062
    type => 'app1logs'
    codec => plain
  }
  beats {
  port => 9063
  type => 'app2logs'
  codec => plain
 }
}
filter {
  if [type] == 'app1logs' {
   grok {
         patterns_dir => ["./patterns"]
         match => {
           "message" => "%{TIMESTAMP_ISO8601:logtimestamp} %{LOGLEVEL:logLevel} \[%{JAVACLASS:class}\] - %{GREEDYDATA:message}"
       }
   }
   date {
        timezone => "America/Los_Angeles"
        match => ["logtimestamp", "yyyy-MM-dd HH:mm:ss"]
        target => "@timestamp"
   }
  } else if [type] == 'pmplogs' {
   grok {
         patterns_dir => ["./patterns"]
         match => {
           "message" => "%{TIMESTAMP_ISO8601:logtimestamp} (?<threadname>[^\]]+) %{LOGLEVEL:logLevel}[ ]+\[%{JAVACLASS:class}\] - %{GREEDYDATA:message}"
       }
   }
   date {
        timezone => "America/Los_Angeles"
        match => ["logtimestamp", "yyyy-MM-dd HH:mm:ss"]
        target => "@timestamp"
   }
  } else if [type] == 'appstoreintegrationslogs' {
 grok {
       patterns_dir => ["./patterns"]
       match => {
         "message" => "%{TIMESTAMP_ISO8601:logtimestamp} %{LOGLEVEL:logLevel} \[%{JAVAFILE:class}\] - %{GREEDYDATA:message}"
     }
 }
 date {
      timezone => "America/Los_Angeles"
      match => ["logtimestamp", "yyyy-MM-dd HH:mm:ss"]
      target => "@timestamp"
  }
  }
  if "_grokparsefailure" in [tags] { drop {} }
} 
output {
  elasticsearch {
    hosts => ['localhost']
    user => 'elastic'
    password => 'changeme'
  }
}
